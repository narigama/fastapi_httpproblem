[build-system]
requires      = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name        = "cookiepy"
version     = "0.1.0"
description = ""
authors     = ["David Smith <david@narigama.dev>"]
readme      = "README.md"

[tool.poetry.dependencies]
python = "^3.11"

fastapi = { version = "*" }
uvicorn = { version = "*" }

[tool.poetry.group.dev.dependencies]
pytest                = { version = "*" }
pytest-async          = { version = "*" }
pytest-random-order   = { version = "*" }
pytest-asyncio        = { version = "*" }
async-asgi-testclient = { version = "*" }
freezegun             = { version = "*" }

# formatting, linting
ruff    = { version = "*" }
ipython = { version = "*" }
httpx   = { version = "*" }

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts      = "--random-order"

[tool.ruff]
line-length    = 120
target-version = "py311"
src            = ["fastapi_httpproblem", "tests"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "T201"] # ignore tests use of assert

[tool.ruff.lint]
fixable = ["ALL"] # fix all rules that can be autofixed
select = [
    "F",      # pyflakes
    "C901",   # mccabe complexity
    "I",      # isort
    "S",      # flake8-bandit
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EM",     # flake8-errmsg
    "T20",    # flake8-print
    "RET504", # flake8-return: unnecessary-assign
    "SIM",    # flake8-simplify
    "ERA",    # eradicate
    "PL",     # pylint
]

[tool.ruff.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.isort]
force-single-line   = true
lines-after-imports = 2
known-first-party   = ["fastapi_httpproblem"]

[tool.ruff.format]
line-ending = "lf" # force unix-style line endings

[tool.ruff.mccabe]
max-complexity = 10 # for rule C901: mccabe complexity
